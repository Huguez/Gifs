{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cates","type","value","onChange","target","placeholder","prototype","PropTypes","func","isRequired","GifGridItem","imagen","title","id","className","alt","src","getGif","category","a","endpoint","fetch","resp","json","data","gifs","map","img","images","downsized_medium","url","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","item","GifExpertApp","categorias","setCategoria","cate","i","ReactDOM","render","document","getElementById"],"mappings":"gOAKaA,EAAc,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAAqB,EACVC,mBAAU,IADA,mBACxCC,EADwC,KAC5BC,EAD4B,KAchD,OACI,sBAAMC,SARW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,GAC3BR,GAAe,SAAAS,GAAK,OAAMP,GAAN,mBAAqBO,QAK7C,SACI,uBACIC,KAAK,OACLC,MAAQT,EACRU,SAhBc,SAAEP,GACxBF,EAAeE,EAAEQ,OAAOF,QAgBhBG,YAAY,iBAM5Bf,EAAYgB,UAAY,CACpBf,cAAegB,IAAUC,KAAKC,Y,YC9BrBC,EAAc,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,OAAQC,EAAgB,EAAhBA,MAAgB,EAATC,GAGzC,OACI,sBAAKC,UAAU,yCAAf,UACI,kCAAMF,EAAN,OACA,qBAAKG,IAAKH,EAAOI,IAAML,Q,uBCNtBM,EAAM,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,4DAEF,mCACVC,EAHY,2DAEF,mCAFE,cAGmEF,EAHnE,gDAICG,MAAOD,GAJR,cAIZE,EAJY,gBAKKA,EAAKC,OALV,uBAKVC,EALU,EAKVA,KAEFC,EAAOD,EAAKE,KAAK,SAAEC,GAAU,IAAD,EAC9B,MAAO,CACHd,GAAIc,EAAId,GACRD,MAAOe,EAAIf,MACXD,OAAM,UAAEgB,EAAIC,cAAN,aAAE,EAAYC,iBAAiBC,QAX3B,kBAeXL,GAfW,4CAAH,sDCENM,EAAU,SAAC,GAAkB,IAAhBb,EAAe,EAAfA,SAAe,ECAb,SAAEA,GAAgB,IAAD,EAEf1B,mBAAS,CAAEgC,KAAM,GAAIQ,SAAS,IAFf,mBAElCC,EAFkC,KAE3BC,EAF2B,KAkBzC,OAdAC,qBAAW,WAEPlB,EAAQC,GAAWkB,MAAM,SAAAC,GACrBC,YAAY,WACRJ,EAAU,CACNV,KAAMa,EACNL,SAAS,MAGd,UAGR,CAAEd,IAEEe,EDhBmBM,CAAcrB,GAAhCM,EAF6B,EAE7BA,KAAMQ,EAFuB,EAEvBA,QAEd,OAAS,qCACL,mCAAOd,EAAP,OACEc,GAAW,mBAAGlB,UAAU,oCAAb,0BAEb,qBAAKA,UAAU,YAAf,SACMU,EAAKE,KAAK,SAAEc,GACV,OAAO,cAAC,EAAD,eAA+BA,GAAbA,EAAK3B,aETjC4B,EAAe,WAAM,IAAD,EAEQjD,mBAAU,CAAE,UAFpB,mBAErBkD,EAFqB,KAETC,EAFS,KAI7B,OACI,gCACI,8CACA,cAAC,EAAD,CAAapD,cAAgBoD,IAC7B,uBACA,6BACMD,EAAWhB,KAAK,SAACkB,EAAMC,GACrB,OAAO,cAAC,EAAD,CAAyB3B,SAAW0B,GAApC,UAAiBA,a,MCV5CE,IAASC,OAAQ,cAAC,EAAD,IAAmBC,SAASC,eAAe,W","file":"static/js/main.2e95554c.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nimport PropTypes from 'prop-types';\n\n\nexport const AddCategory = ( { setCategories } ) => {\n    const [ inputValue, setInputValue ] = useState( '' );\n\n    const handleInputChange = ( e ) => {\n        setInputValue( e.target.value )\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if( inputValue.trim().length > 2  ){\n            setCategories( cates => [ inputValue, ...cates ]  )\n        }\n    }\n\n    return (\n        <form onSubmit={ handleSubmit }>\n            <input\n                type=\"text\" \n                value={ inputValue } \n                onChange={ handleInputChange }\n                placeholder=\"categoria\"\n                />\n        </form>\n    );\n};\n\nAddCategory.prototype = {\n    setCategories: PropTypes.func.isRequired\n}\n\n","import React from 'react'\n\nexport const GifGridItem = ( {imagen, title, id} ) => {\n\n    // console.log( imagen );\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <p> { title } </p>\n            <img alt={title} src={ imagen } />\n        </div>\n    )\n}\n","\n\nexport const getGif = async ( category ) => {\n    \n    const api_key = 'IqIIolx2W325nKcvPuEzq2JV8yUlgnUz'\n    const endpoint = `https://api.giphy.com/v1/stickers/search?api_key=${ api_key }&q=${ category }&limit=25&offset=0&rating=g&lang=en`\n    const resp = await fetch( endpoint )\n    const { data } = await resp.json();\n    \n    const gifs = data.map( ( img ) => { \n        return {\n            id: img.id,\n            title: img.title,\n            imagen: img.images?.downsized_medium.url\n        }\n    } );\n\n    return gifs;\n}\n\n","import React from \"react\";\nimport { GifGridItem } from \"./GifGridItem\";\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\n\nexport const GifGrid = ({ category }) => {\n\n    const { data, loading } = useFetchGifs( category );\n    \n    return ( <>\n        <h3> { category } </h3>\n        { loading && <p className=\"animate__animated animate__flash \"> Loading... </p> }\n\n        <div className=\"card-grid\"> \n            { data.map( ( item ) => { \n                return <GifGridItem key={item.id} {...item } />\n            } ) }\n        </div> \n    </>);\n}","import { useState, useEffect } from \"react\";\nimport { getGif } from \"../helpers/getGifs\";\n\n\nexport const useFetchGifs = ( category  ) => {\n\n    const [state, setState] = useState({ data: [], loading: true });\n\n    useEffect( () => {\n        \n        getGif( category ).then( imgs =>{\n            setTimeout( ()=>{\n                setState( {\n                    data: imgs,\n                    loading: false\n                } );\n                \n            }, 2000  );\n        });\n        \n    }, [ category ] );\n    \n    return state;\n}\n","import React, { useState } from 'react';\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\n\nexport const GifExpertApp = ()=> {\n    \n    const [ categorias, setCategoria ] = useState( [ 'tacos' ] )\n\n    return (\n        <div>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories={ setCategoria } />\n            <hr />\n            <ol>\n                { categorias.map( (cate, i ) => { \n                    return <GifGrid key={`${cate}`} category={ cate } />\n                } ) }\n            </ol>\n        </div>\n    );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render( <GifExpertApp /> , document.getElementById('root') );\n\n"],"sourceRoot":""}